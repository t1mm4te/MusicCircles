#!/bin/bash
# filepath: run.sh

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
echo_info() {
    echo "==> $1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
check_command() {
    if [ $? -eq 0 ]; then
        echo_info "‚úÖ $1 completed successfully"
    else
        echo_info "‚ùå $1 failed"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è: —Å–±–æ—Ä–∫–∞ Docker-–æ–±—Ä–∞–∑–æ–≤ –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
build() {
    echo_info "Building Docker images..."
    docker compose build
    check_command "Build"
}

# –§—É–Ω–∫—Ü–∏—è: –∑–∞–ø—É—Å–∫ unit-—Ç–µ—Å—Ç–æ–≤ –¥–ª—è media_processor
unit_test() {
    echo_info "Running unit tests for media_processor..."
    docker compose run --rm media_processor pytest tests/unit
    check_command "Media processor unit tests"
}

# –§—É–Ω–∫—Ü–∏—è: –∑–∞–ø—É—Å–∫ unit-—Ç–µ—Å—Ç–æ–≤ –¥–ª—è telegram_bot
tb_test() {
    echo_info "Running unit tests for telegram_bot..."
    docker compose run --rm telegram_bot pytest tests/unit
    check_command "Telegram bot unit tests"
}

# –§—É–Ω–∫—Ü–∏—è: –∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
test() {
    unit_test
    tb_test
    echo_info "All tests completed."
}

# –§—É–Ω–∫—Ü–∏—è: –∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
start() {
    echo_info "Starting application services..."
    docker compose up -d
    check_command "Start services"
}

# –§—É–Ω–∫—Ü–∏—è: –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
stop() {
    echo_info "Stopping application services..."
    docker compose down
    check_command "Stop services"
}

# –§—É–Ω–∫—Ü–∏—è: —Ü–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (—Å–±–æ—Ä–∫–∞, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –∑–∞–ø—É—Å–∫)
all() {
    build
    test
    start
    echo_info "üöÄ Application is running! Use './run.sh stop' to stop services."
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏
help() {
    echo "Usage: $0 [COMMAND]"
    echo ""
    echo "Commands:"
    echo "  all         Build, test and start services (default)"
    echo "  build       Build Docker images for all services"
    echo "  unit-test   Run unit tests for media_processor"
    echo "  tb-test     Run unit tests for telegram_bot"
    echo "  test        Run all tests (unit-test + tb-test)"
    echo "  start       Start all services in background"
    echo "  stop        Stop and remove all service containers"
    echo "  help        Show this help message"
    echo ""
    echo "Examples:"
    echo "  $0           # Build, test and start (default)"
    echo "  $0 build     # Only build images"
    echo "  $0 test      # Only run tests"
    echo "  $0 start     # Only start services"
    echo "  $0 stop      # Stop services"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
case "${1:-all}" in
    "all")
        all
        ;;
    "build")
        build
        ;;
    "unit-test")
        unit_test
        ;;
    "tb-test")
        tb_test
        ;;
    "test")
        test
        ;;
    "start")
        start
        ;;
    "stop")
        stop
        ;;
    "help"|"-h"|"--help")
        help
        ;;
    *)
        echo_info "Unknown command: $1"
        echo ""
        help
        exit 1
        ;;
esac

echo_info "Script completed successfully!"