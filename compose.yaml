services:
  audio_receiver:
    build: ./audio_receiver
    image: python-audio-reveiver-api
    container_name: receiver-api
    ports:
      - "9000:9000"
    healthcheck:
      # Проверяем доступность endpoint'а документации FastAPI (/docs)
      # Можно создать специальный /health endpoint
      test: ["CMD", "curl", "-f", "http://localhost:9000/docs"]
      interval: 10s    # Проверять каждые 10 секунд
      timeout: 5s      # Считать неудачей, если ответ не пришел за 5 секунд
      retries: 5       # Количество попыток перед тем, как пометить как нездоровый
      start_period: 10s # Дать 10 секунд на первоначальный запуск перед первыми проверками
  
  media_processor:
    build: ./media_processor
    image: python-media-processor-api
    container_name: processor-api
    ports:
      - "8000:8000"
  
  database:
    build: ./database
    image: python-database-service
    container_name: database-service
    ports:
      - "8001:8001"
    volumes:
      - ./database/data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  
  telegram_bot:
    build: ./telegram_bot
    image: python-telegram-bot
    container_name: music-bot
    depends_on:
      - audio_receiver
      - media_processor
      - database
    